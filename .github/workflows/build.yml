on:
  push:
    branches:
      - "*"
    tags:
      - "v*.*.*"
jobs:
  release:
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.15
      BUILD_OS: ${{ matrix.os.name }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - name: macos
          suffix: '-intel'
          version: 12
          path-separator: ':'
          path-join: '/'
        - name: macos
          suffix: '-silicon'
          version: 14
          path-separator: ':'
          path-join: '/'
        - name: ubuntu
          suffix: ''
          version: 22.04
          path-separator: ':'
          path-join: '/'
        - name: windows
          suffix: ''
          version: 2019
          path-separator: ';'
          path-join: '\'
        boost-version:
        - 1.85.0
        sfml-version:
        - 2.6.1
        configuration:
        - Release
        - Debug
    runs-on: '${{ matrix.os.name }}-${{ matrix.os.version }}'
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: CMake zlib for linux
        run: cmake -DCMAKE_INSTALL_PREFIX=../ -S . -B build
        working-directory: zlib
        if: ${{ matrix.os.name == 'ubuntu' }}
      - name: CMake zlib for windows
        run: cmake -DCMAKE_INSTALL_PREFIX=../ -S . -B build -D CMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
        working-directory: zlib
        if: ${{ matrix.os.name == 'windows' }}
      - name: Build zlib for linux
        run: make && make install
        working-directory: zlib/build
        if: ${{ matrix.os.name == 'ubuntu' }}
      - name: Build zlib for windows
        run: './.github/workflows/scripts/win/zlib-build.bat x64'
        if: ${{ matrix.os.name == 'windows' }}

      - run: mkdir include && mkdir lib
        if: ${{ matrix.os.name == 'macos' }}

      # On MacOS, a flag is required to install pip dependencies - my fork provides this
      - name: Build Boost (fork)
        id: boost-fork
        uses: NQNStudios/build-boost@v1
        with:
          version: ${{ matrix.boost-version }}
          libraries: filesystem system
          platform: x64
          configuration: ${{ matrix.configuration }}
          static: ${{ matrix.os.name == 'windows' }}
        if: ${{ matrix.os.name == 'macos' }}
      - name: Build Boost
        id: boost
        uses: egor-tensin/build-boost@v1
        with:
          version: ${{ matrix.boost-version }}
          libraries: filesystem system
          platform: x64
          configuration: ${{ matrix.configuration }}
          static: ${{ matrix.os.name == 'windows' }}
        if: ${{ matrix.os.name != 'macos' }}
      - name: Copy boost include to output folders
        run: cp -r '${{ matrix.os.name == 'macos' && steps.boost-fork.outputs.root || steps.boost.outputs.root }}${{ matrix.os.path-join }}boost' include/
        shell: bash
      - name: Copy boost libs to output folders
        run: cp -r '${{ matrix.os.name == 'macos' && steps.boost-fork.outputs.librarydir || steps.boost.outputs.librarydir }}${{ matrix.os.path-join }}'""* lib/
        if: ${{ matrix.os.name != "windows" }}
      - name: Copy boost libs to output folders (windows)
        run: copy '${{ matrix.os.name == 'macos' && steps.boost-fork.outputs.librarydir || steps.boost.outputs.librarydir }}${{ matrix.os.path-join }}*' lib/
        if: ${{ matrix.os.name == "windows" }}

      - name: Build SFML
        id: sfml
        uses: NQNStudios/install-sfml@v1
        with:
          sfml: ${{ matrix.sfml-version }}
          config: ${{ matrix.configuration }}

      - name: 'Tar files'
        run: 'tar -cvf dependencies-${{ matrix.os.name }}${{matrix.os.suffix}}-${{ matrix.configuration }}.tar "include" "lib"'

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: dependencies-${{ matrix.os.name }}${{matrix.os.suffix}}-${{ matrix.configuration }}
          path: dependencies-${{ matrix.os.name }}${{matrix.os.suffix}}-${{ matrix.configuration }}.tar
      - name: Github release
        uses: softprops/action-gh-release@v2
        with:
          files: dependencies-${{ matrix.os.name }}${{matrix.os.suffix}}-${{ matrix.configuration }}.tar
        if: ${{ startsWith(github.ref, 'refs/tags/') }}